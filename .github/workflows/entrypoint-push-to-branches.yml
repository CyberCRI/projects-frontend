name: Lint, test, build and push image

on:
  push:
    branches:
      - "*"
    tags:
      - "**"
      - "!**_deploy"

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    uses: ./.github/workflows/lint-and-test.yml
  build-docker:
    uses: CyberCRI/github-workflows/.github/workflows/build-push.yaml@main
    with:
      registry-name: ${{ vars.DOCKER_PROD_REGISTRY }}
      image-name: projects-front
      image-tag: ${{ github.sha }}
      recursive-submodule-checkout: true
      build-args: |
        VITE_APP_API_ORG_CODE=$DOCKER_INJECT_ORG_CODE
        VITE_APP_API_URL=$DOCKER_INJECT_VITE_APP_API_URL
        VITE_APP_BASE_URL=$DOCKER_INJECT_VITE_APP_BASE_URL
        VITE_APP_CAPTCHA_KEY=$DOCKER_INJECT_VITE_APP_CAPTCHA_KEY
        VITE_APP_DOC=$DOCKER_INJECT_VITE_APP_DOC
        VITE_APP_I18N_LOCALE=$DOCKER_INJECT_VITE_APP_I18N_LOCALE
        VITE_APP_KEYCLOAK_REALM=$DOCKER_INJECT_VITE_APP_KEYCLOAK_REALM
        VITE_APP_KEYCLOAK_CLIENT_ID=$DOCKER_INJECT_VITE_APP_KEYCLOAK_CLIENT_ID
        VITE_APP_KEYCLOAK_CLIENT_SECRET=$DOCKER_INJECT_VITE_APP_KEYCLOAK_CLIENT_SECRET
        VITE_APP_KEYCLOAK_URL=$DOCKER_INJECT_VITE_APP_KEYCLOAK_URL
        VITE_APP_META_PORTAL_URL=$DOCKER_INJECT_VITE_APP_META_PORTAL_URL
        VITE_APP_MIXPANEL_API_URL=$DOCKER_INJECT_VITE_APP_MIXPANEL_API_URL
        VITE_APP_MIXPANEL_PROJECT_TOKEN=$DOCKER_INJECT_VITE_APP_MIXPANEL_PROJECT_TOKEN
        VITE_APP_PUBLIC_BINARIES_PREFIX=${{ vars.PUBLIC_BINARIES_PREFIX }}
        VITE_APP_WSS_HOST=$DOCKER_INJECT_VITE_APP_WSS_HOST
        VITE_APP_VERSION=$DOCKER_INJECT_VITE_APP_VERSION
        VITE_APP_HOME=$DOCKER_INJECT_VITE_APP_HOME
        VITE_APP_SENTRY_ENABLED=$DOCKER_INJECT_VITE_APP_SENTRY_ENABLED
        VITE_APP_SENTRY_DSN=$DOCKER_INJECT_VITE_APP_SENTRY_DSN
        VITE_APP_SENTRY_RELEASE=$DOCKER_INJECT_VITE_APP_SENTRY_RELEASE
        VITE_APP_ENVIRONMENT=$DOCKER_INJECT_VITE_APP_ENVIRONMENT
    secrets:
      submodules-app-private-key: ${{ secrets.INFRA_BOT_APP_PRIVATE_KEY }}
      submodules-app-id: ${{ secrets.INFRA_BOT_APP_ID }}
      submodules-app-installation-id: ${{ secrets.INFRA_BOT_APP_INSTALLATION_ID }}
      registry-username: ${{ secrets.DOCKER_PROD_USERNAME }}
      registry-password: ${{ secrets.DOCKER_PROD_PASSWORD }}

  upload-source-map:
    runs-on: frontend-upload-source-map-runner
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install dependencies
        run: yarn install --pure-lockfile
      - name: Install sentry cli
        run: yarn add @sentry/cli
      - name: Login to sentry
        run: ./node_modules/.bin/sentry-cli --url ${{vars.GLITCHTIP_URL}} login --auth-token ${{secrets.GLITCHTIP_RELEASE_SOURCEMAP_TOKEN}}
      - name: Check if release exists
        id: release_exists
        run: |
          ./node_modules/.bin/sentry-cli --url ${{vars.GLITCHTIP_URL}} releases info \
          --org ${{vars.GLITCHTIP_ORGANIZATION_NAME}} \
          ${{ github.sha }} | true
          if [ ${PIPESTATUS[0]} -eq 0 ]; then
            echo "::set-output name=release_exists::true"
            echo "Release already exists"
          else
            echo "::set-output name=release_exists::false"
          fi
      - name: Build with source map
        if: steps.release_exists.outputs.release_exists == 'false'
        run: NODE_OPTIONS=--max_old_space_size=2048 yarn build:sourcemaps
      - name: Upload source map (dev)
        if: steps.release_exists.outputs.release_exists == 'false'
        run: |
          ./node_modules/.bin/sentry-cli --url ${{vars.GLITCHTIP_URL}} sourcemaps upload \
          --org ${{vars.GLITCHTIP_ORGANIZATION_NAME}} \
          --project projects-frontend \
          --release ${{ github.sha }} \
          --url-prefix '/' \
          dist
      - name: Upload source map (staging)
        if: steps.release_exists.outputs.release_exists == 'false'
        run: |
          ./node_modules/.bin/sentry-cli --url ${{vars.GLITCHTIP_URL}} sourcemaps upload \
          --org ${{vars.GLITCHTIP_ORGANIZATION_NAME}} \
          --project projects-frontend-staging \
          --release ${{ github.sha }} \
          --url-prefix '/' \
          dist
      - name: Upload source map (production)
        if: steps.release_exists.outputs.release_exists == 'false'
        run: |
          ./node_modules/.bin/sentry-cli --url ${{vars.GLITCHTIP_URL}} sourcemaps upload \
          --org ${{vars.GLITCHTIP_ORGANIZATION_NAME}} \
          --project projects-frontend-production \
          --release ${{ github.sha }} \
          --url-prefix '/' \
          dist

  tag-deploy:
    needs:
      - build-docker
      - lint-and-test
    uses: CyberCRI/github-workflows/.github/workflows/tag-deploy.yaml@main
  tag-deploy-fast:
    needs:
      - build-docker
    uses: CyberCRI/github-workflows/.github/workflows/tag-deploy-fast.yaml@main
