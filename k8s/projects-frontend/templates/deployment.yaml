apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- tpl (.Values.commonLabels  | toYaml | nindent 4 ) $ }}
  name: {{ tpl .Values.fullName . }}
spec:
  selector:
    matchLabels:
      {{- tpl (.Values.commonLabels  | toYaml | nindent 6 ) $ }}
  template:
    metadata:
      labels:
        {{- tpl (.Values.commonLabels  | toYaml | nindent 8) $ }}
      annotations:
      {{- if .Values.injectedEnv.nonSensitive }}
        checksum/configmap: {{ include (print $.Template.BasePath "/environment-configmap.yaml") . | sha256sum }}
      {{- end }}
      {{- if .Values.injectedEnv.sensitive }}
        checksum/secret: {{ include (print $.Template.BasePath "/environment-secret.yaml") . | sha256sum }}
      {{- end }}
        argocd.argoproj.io/sync-wave: "1"
    spec:
      securityContext:
        {{- include "common.security.podSecurityContext.restricted" (dict "user" 101) | nindent 8 }}
      containers:
        {{- with $.Values.image }}
        - image: {{ tpl (printf "%s/%s:%s" .repository .path .tag) $ }}
        {{- end }}
          securityContext:
          {{- include "common.security.containerSecurityContext.restricted" dict | nindent 12 }}
          imagePullPolicy: IfNotPresent
          name: projects-frontend
          ports:
            - name: http
              containerPort: {{ .Values.targetPort }}
          env:
          {{- range $key, $value := .Values.nginxProxyEnv }}
            - name: {{ $key }}
              value: {{ tpl $value $ | quote }}
          {{- end }}
          envFrom:
            {{- if .Values.injectedEnv.nonSensitive }}
            - configMapRef:
                name: {{ tpl .Values.fullName . }}
            {{- end }}
          resources: {{- .Values.resources |toYaml | nindent 12 }}
          livenessProbe:
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
            httpGet:
              scheme: HTTP
              path: /
              port: http
          readinessProbe:
            initialDelaySeconds: 1
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 1
            httpGet:
              scheme: HTTP
              path: /
              port: http
          volumeMounts:
          - name: secrets
            mountPath: "/secrets"
            readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: {{ tpl $.Values.fullName $ }}
