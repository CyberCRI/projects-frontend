{{- if .Values.e2e.enabled }}
kind: CronWorkflow
apiVersion: argoproj.io/v1alpha1
metadata:
  name: {{ tpl .Values.e2e.name . }}
spec:
  workflowSpec:
    {{- if or .Values.e2e.notify.failure.enabled .Values.e2e.notify.success.enabled }}
    hooks:
      {{- if .Values.e2e.notify.failure.enabled }}
      failed:
        expression: workflow.status == "Error" || workflow.status == "Failed"
        templateRef:
          name: notify-slack
          template: send-request-playwright
          clusterScope: true
        arguments:
          parameters:
          - name: status
            value: failure
          - name: workflowId
            value: {{ print "{{workflow.uid}}" | quote }}
          - name: slackChannel
            value: {{ .Values.e2e.notify.failure.slackChannel | quote }}
          - name: reportHost
            value: {{ .Values.e2e.reportHost | quote }}
      {{- end }}
      {{- if .Values.e2e.notify.success.enabled }}
      succeeded:
        expression: workflow.status == "Succeeded"
        templateRef:
          name: notify-slack
          template: send-request-playwright
          clusterScope: true
        arguments:
          parameters:
          - name: status
            value: success
          - name: workflowId
            value: {{ print "{{workflow.uid}}" | quote }}
          - name: slackChannel
            value: {{ .Values.e2e.notify.success.slackChannel | quote }}
          - name: reportHost
            value: {{ .Values.e2e.reportHost | quote }}
      {{- end }}
    {{- end }}
    securityContext:
      {{- include "common.security.podSecurityContext.restricted" dict | nindent 6 }}
    templates:
      - name: all
        steps:
        - - name: wake-up-common
            templateRef:
              name: service-waker
              template: wake-up
              clusterScope: true
            arguments:
              parameters:
              - name: group_name
                value: {{ .Values.sablier.commonGroupName }}
              - name: timeout
                value: 5m
          - name: wake-up-projects
            templateRef:
              name: service-waker
              template: wake-up
              clusterScope: true
            arguments:
              parameters:
              - name: group_name
                value: {{ .Values.sablier.groupName }}
              - name: timeout
                value: 3m
        - - name: run
            template: run
            continueOn:
              failed: true
        - - name: upload-report
            template: upload-report
            arguments:
              artifacts:
              - name: report
                from: {{ print "{{steps.run.outputs.artifacts.report}}" | quote }}
        - - name: report-status
            template: report-status
            arguments:
              parameters:
              - name: status
                value: {{ print "{{steps.run.status}}" | quote }}
      - name: run
        container:
        {{- with $.Values.e2e.image }}
          image: {{ tpl (printf "%s/%s:%s" .repository .path .tag) $ }}
        {{- end }}
          args:
          - npx
          - playwright
          - test
          - --project=chromium
          envFrom:
          - configMapRef:
              name: {{ tpl .Values.e2e.name . }}
          volumeMounts:
          - name: secrets
            mountPath: "/secrets"
            readOnly: true
        podSpecPatch: |
          containers:
          - name: main
            resources:
            {{- toYaml .Values.e2e.resources | nindent 14 }}
        outputs:
          artifacts:
          - name: report
            path: /app/playwright-report
      - name: upload-report
        inputs:
          artifacts:
          - name: report
        steps:
        - - name: upload
            templateRef:
              name: upload-to-blob-storage
              template: upload-to-blob-storage
              clusterScope: true
            arguments:
              parameters:
              - name: file_path
                value: /tmp/playwright-report
              - name: blob_prefix
                value: {{  join "/" (list  (tpl .Values.e2e.blobName .) (print "{{workflow.uid}}")) | quote }}
              - name: storage_account_name
                value: {{ tpl .Values.e2e.storageAccountName . }}
              artifacts:
              - name: to_upload
                from: {{ print "{{inputs.artifacts.report}}" | quote }}
      - name: report-status
        inputs:
          parameters:
          - name: status
        container:
          image: alpine:3.12
          command: ["sh", "-c"]
          args: ["if [ {{ print "{{inputs.parameters.status}}" }} == 'Succeeded' ]; then exit 0; else exit 1; fi"]

    volumes:
    - name: secrets
      secret:
        secretName: {{ tpl .Values.e2e.name . }}
    - name: npm-cache
      emptyDir: {}
    entrypoint: all
    serviceAccountName: {{ .Values.workflowRbac.serviceAccountName }}
  schedules:
  - {{ .Values.e2e.schedule }}
  timezone: {{ .Values.e2e.timezone }}
  concurrencyPolicy: {{ .Values.e2e.concurrencyPolicy }}
---

{{- $configGenerator := dict
"config" .Values.e2eEnv
"root" $
"commonLabels" .Values.e2e.commonLabels
"name" (tpl .Values.e2e.name .) }}

{{- include "common.config.resources" $configGenerator}}
{{- end}}
